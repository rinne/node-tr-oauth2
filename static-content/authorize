<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Login</title>
  <style>
    /* Ensure the page doesn't shrink below 320 pixels */
    html, body {
      min-width: 320px;
      margin: 0;
      padding: 0;
      height: 100%;
      font-family: Arial, sans-serif;
      background: #f2f2f2;
    }
    /* Center the login box */
    .container {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100%;
      padding: 10px;
    }
    /* Login box styling */
    .login-box {
      background: #fff;
      width: 100%;
      max-width: 400px;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      position: relative;
      z-index: 1;
    }
    .login-box h2 {
      text-align: center;
      margin-bottom: 20px;
    }
    .login-box input {
      width: 100%;
      padding: 12px;
      margin: 8px 0;
      border: 1px solid #ccc;
      border-radius: 4px;
      font-size: 16px;
      box-sizing: border-box;
    }
    /* Button Group for Cancel and Login */
    .button-group {
      display: flex;
      width: 100%;
      margin-top: 10px;
    }
    .button-group button {
      padding: 12px;
      font-size: 16px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }
    /* Cancel button uses roughly 38.2% of the width */
    .button-group button.cancel {
      width: 38.2%;
      background-color: #d9534f;
      color: #fff;
      margin-right: 0.5%;
    }
    .button-group button.cancel:hover {
      background-color: #c9302c;
    }
    /* Login button takes remaining 61.8% */
    .button-group button.login {
      width: 61.8%;
      background-color: #4CAF50;
      color: #fff;
    }
    .button-group button.login:hover {
      background-color: #45a049;
    }
    /* Modal overlay for error messages */
    .modal-overlay {
      display: none; /* Hidden by default */
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.5);
      justify-content: center;
      align-items: center;
      z-index: 2;
    }
    .modal-content {
      background: #fff;
      padding: 20px;
      border-radius: 6px;
      text-align: center;
      max-width: 90%;
      box-shadow: 0 2px 10px rgba(0,0,0,0.2);
    }
    .modal-content p {
      margin: 0 0 10px;
      font-size: 16px;
      color: #333;
    }
    .modal-content button {
      padding: 8px 16px;
      background: #4CAF50;
      color: #fff;
      border: none;
      border-radius: 4px;
      font-size: 14px;
      cursor: pointer;
    }
    .modal-content button:hover {
      background: #45a049;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="login-box">
      <h2>Login</h2>
      <!-- Use novalidate to allow custom validation -->
      <form id="loginForm" novalidate>
        <input type="email" id="username" name="username" placeholder="Email" required>
        <input type="password" id="password" name="password" placeholder="Password (min 8 characters)" required>
        <!-- Button Group with Cancel and Login buttons -->
        <div class="button-group">
          <button type="button" id="cancelButton" class="cancel">Cancel</button>
          <button type="submit" class="login">Login</button>
        </div>
      </form>
    </div>
  </div>

  <!-- Modal overlay for error messages -->
  <div class="modal-overlay" id="errorModal">
    <div class="modal-content">
      <p id="errorText"></p>
      <button id="closeError">OK</button>
    </div>
  </div>

  <script>
    // Utility function to show the error modal with a custom message
    function showError(message) {
      var errorModal = document.getElementById('errorModal');
      var errorText = document.getElementById('errorText');
      errorText.innerHTML = message;
      errorModal.style.display = "flex";
    }
    // Hide error modal on clicking OK
    document.getElementById('closeError').addEventListener('click', function() {
      document.getElementById('errorModal').style.display = "none";
    });

    // Cancel button now shows an alert notifying that the login was cancelled.
    document.getElementById('cancelButton').addEventListener('click', function() {
      alert("Login cancelled");
    });

    // Attach event listener for form submission (button click or Enter)
    document.getElementById('loginForm').addEventListener('submit', function(e) {
      e.preventDefault(); // Prevent form's default submission behavior

      var usernameField = document.getElementById('username');
      var passwordField = document.getElementById('password');
      var username = usernameField.value.trim();
      var password = passwordField.value;

      var errors = [];
      // Simple regex for validating email address
      var emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailRegex.test(username)) {
        errors.push("Username must be a valid email address.");
      }
      if (password.length < 8) {
        errors.push("Password must be at least 8 characters long.");
      }

      if (errors.length > 0) {
        // Display errors by joining them with line breaks
        showError(errors.join("<br>"));
      } else {
        // On valid input, simply call alert with user-provided values.
        alert("User: " + username + " Pass: " + password);
      }
    });
  </script>
</body>
</html>
